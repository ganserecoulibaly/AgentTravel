

Exécuter le code : python3 agenttraval.py

API ROUTE
https://developers.google.com/maps/documentation/routes/overview?hl=fr
2 méthodes: ComputeRoutes et ComputeRouteMatrix
    ComputeRoute : https://developers.google.com/maps/documentation/routes/compute_route_directions?hl=fr 
           https://routes.googleapis.com/directions/v2:computeRoutes

Exemple d'appel : 
https://routes.googleapis.com/directions/v2:computeRoutes?
origin.location.lat=48.8566&origin.location.lng=2.3522&
destination.location.lat=45.7640&destination.location.lng=4.8357&
travelMode=TRANSIT&
routingPreference=TRAFFIC_AWARE&
key=


GetLoc - get lat long
https://maps.googleapis.com/maps/api/geocode/json?address=champigny&key=


https://developers.google.com/maps/documentation/places/web-service/overview?hl=fr



TO FIX:



- prévoir un repas pour le soir vers 20h 

- corriger l'ajout de lieu dans la réponse finale
- quand je donne une liste de jour, les activités se mettent pas dans les bons jours
- Connexion au lieu d'activité : voir si je peux obtenir le prix d'entrée pour l'activité

    
- le repas doit etre compris entre 12h et 13h30
- début de la journée entre 9h30 et 10h 
- fin de la journée 19h / 19h30 


- ajout des itinéraire entre les lieux
- pouvoir se rendre sur la reservation d'une activité
- possibilité de reserver un restaurant

- connexion API restaurant (the fork,etc)
- connexion maps / ratp / IDF mobilité pour itinéraire
- la variable "budget" demandé en entrée doit etre dans une liste prédéfini (que le visiteur ne se trompe pas)

- trouver les coordonnés long/lat à partir d'un lieu/ adresse 
- Trier les lieux d'activité par groupe (pour éviter les trop longs trajets en une seule journée)
   placer ses lieux dans des groupes (par groupe d'arrondissement)
   appliquer au code python
- pour les restaurants, il faudra donner l'adresse du restaurant (midi et soir)
- si sejour long superieur à 10 jours : proposer parc d'attraction : ce sera la seule activité de la journée
- avoir un fichier de paramétrage (.env) pour l'api key + parametre de connexion à la bdd



MODELE BDD 
-+ activities = ville, nom, adresse, type (journee,nocturne), duree, prix, tarifAdulte, tarifEnfant
-+ restaurant = ville, nom, adressse, type, duree



FAIT : 
- tarifs : il faudra dissocier le prix adulte vs enfant vs etc
- ajout de la durée aux activités
- ajouter le prix total de la journée
- prévoir des activités nocturnes sympa (hors restaurant)
- si une activité a été choisie une fois, ne plus la reproposer dans la liste (la retirer de la liste)
- ajout un prix aux activités si pas déjà fait
- possibilité d'indiquer un lieu de départ le matin (facultatif)
- ajouter une ville (la liste des activités en dépendra)
- donnez la possiblité d'inclure des lieux prédéfinis par les voyageurs à intégrer dans un trajet (+ numéro du jour en option facultatives)              
- Ajout d'une durée fixe au restaurant en fonction de la qualité du restaurant : pour l'instant, je n'en fais rien
- API Places / Google maps platform : Vous pouvez rechercher des lieux par nom, par type (par exemple, "musée", "parc", "restaurant") ou par proximité géographique.
- connexion API activités (trip advisor, get your guide, api google place, etc) : fait avec google 
- ajouter dans le modèle des activités la notion de tarif enfant et tarif adulte (pour de l'informatif)
- installer une BDD sur le nas + test connexion : ok avec maria db (mysql)
- avec l'appel à l'api de google : commencer à garnir ma BDD
- un fichier py pour insérer les lignes (init de ma base)


